[{"D:\\irvan\\react\\juliansepatu\\src\\index.js":"1","D:\\irvan\\react\\juliansepatu\\src\\reportWebVitals.js":"2","D:\\irvan\\react\\juliansepatu\\src\\App.js":"3","D:\\irvan\\react\\juliansepatu\\src\\Apps.js":"4","D:\\irvan\\react\\juliansepatu\\src\\Table.js":"5","D:\\irvan\\react\\juliansepatu\\src\\Pages\\BarangKeluar\\index.js":"6","D:\\irvan\\react\\juliansepatu\\src\\Pages\\BarangMasuk\\index.js":"7","D:\\irvan\\react\\juliansepatu\\src\\Pages\\BarangMasuk\\Tabel.js":"8","D:\\irvan\\react\\juliansepatu\\src\\Pages\\BarangMasuk\\Form.js":"9","D:\\irvan\\react\\juliansepatu\\src\\Pages\\BarangReturn\\index.js":"10","D:\\irvan\\react\\juliansepatu\\src\\Pages\\BarangKeluar\\Tabel.js":"11"},{"size":501,"mtime":1607264048334,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":685,"mtime":1607701466234,"results":"15","hashOfConfig":"13"},{"size":2624,"mtime":1607757463798,"results":"16","hashOfConfig":"13"},{"size":2100,"mtime":1607340364115,"results":"17","hashOfConfig":"13"},{"size":2871,"mtime":1607760649709,"results":"18","hashOfConfig":"13"},{"size":3340,"mtime":1607757382966,"results":"19","hashOfConfig":"13"},{"size":5331,"mtime":1607756315661,"results":"20","hashOfConfig":"13"},{"size":3587,"mtime":1607585475724,"results":"21","hashOfConfig":"13"},{"size":1912,"mtime":1607701530327,"results":"22","hashOfConfig":"13"},{"size":15650,"mtime":1607758682823,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"m3sfvn",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},"D:\\irvan\\react\\juliansepatu\\src\\index.js",[],["52","53"],"D:\\irvan\\react\\juliansepatu\\src\\reportWebVitals.js",[],"D:\\irvan\\react\\juliansepatu\\src\\App.js",[],["54","55"],"D:\\irvan\\react\\juliansepatu\\src\\Apps.js",[],"D:\\irvan\\react\\juliansepatu\\src\\Table.js",[],"D:\\irvan\\react\\juliansepatu\\src\\Pages\\BarangKeluar\\index.js",[],"D:\\irvan\\react\\juliansepatu\\src\\Pages\\BarangMasuk\\index.js",[],"D:\\irvan\\react\\juliansepatu\\src\\Pages\\BarangMasuk\\Tabel.js",["56","57","58"],"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport QRCode from \"react-qr-code\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport ReactToPrint from \"react-to-print\";\r\n\r\n\r\nexport default class Tabel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dialogopen: false,\r\n            nobarang:'not'\r\n        };\r\n        this.handleClickOpen = this.handleClickOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n    }\r\n    handleClickOpen = (val) => {\r\n        this.setState({nobarang:val});\r\n        this.setState({dialogopen:true});\r\n      };\r\n    \r\n    handleClose = () => {\r\n        this.setState({dialogopen:false});\r\n      };\r\n    render() {\r\n        return (\r\n            <Box component=\"span\" m={1}>\r\n            <TableContainer component={Paper}>\r\n                <Table size=\"small\" aria-label=\"a dense table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Nama Barang</TableCell>\r\n                            <TableCell>Jumlah</TableCell>\r\n                            <TableCell>Tanggal Masuk</TableCell>\r\n                            <TableCell>Kode</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            this.props.rows.map((row) => (\r\n                                    <TableRow key={row.BarangMasukId}>\r\n                                        <TableCell>{row.NamaBarang}</TableCell>\r\n                                        <TableCell>{row.Jumlah}</TableCell>\r\n                                        <TableCell>{row.created_at}</TableCell>\r\n                                        <TableCell>\r\n                                            <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen.bind(this,row.NoBarang)}>\r\n                                                Code\r\n                                            </Button>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <Dialog\r\n                open={this.state.dialogopen}\r\n                onClose={this.handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\">\r\n                {/* <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle> */}\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <QRCode value={this.state.nobarang} />\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleClose} color=\"primary\">\r\n                    <ReactToPrint\r\n                                trigger={() => <a href=\"#\">Print</a>}\r\n                                content={() => this.componentRef}\r\n                                />\r\n                    </Button>\r\n                    <Button onClick={this.handleClose} color=\"primary\" autoFocus=\"autoFocus\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <div style={{ display: \"none\" }}>\r\n                <ComponentToPrint ref={(el) => (this.componentRef = el)} nobarang={this.state.nobarang}/>\r\n            </div>\r\n        </Box>\r\n        )\r\n    }\r\n}\r\n\r\nclass ComponentToPrint extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ukuran: localStorage.getItem('ukuranqrcode') || 128,\r\n            jumlahqrcode:20,\r\n            jumlahx:[]\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.listData();\r\n    }\r\n\r\n    listData = () => {\r\n        let arr = []\r\n        for(let i = 1; i <= this.state.jumlahqrcode; i++){\r\n            arr.push(i)\r\n        }\r\n        this.setState({jumlahx:arr})\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n            <div>\r\n                {\r\n                    this.state.jumlahx.map((key,i) => (\r\n                        <span  style={{marginTop:10,padding:10}} key={i}><QRCode bgColor={'#FFFFFF'} fgColor={'#000000'} size={this.state.ukuran} value={this.props.nobarang}/></span>\r\n                    ))\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  ","D:\\irvan\\react\\juliansepatu\\src\\Pages\\BarangMasuk\\Form.js",["59"],"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n    boxpadding: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    formcontrolpadding: {\r\n        padding: theme.spacing(1)\r\n    },\r\n    buttonProgress: {\r\n      color: green[500],\r\n      position: 'absolute',\r\n      top: '50%',\r\n      left: '50%',\r\n      marginTop: -12,\r\n      marginLeft: -12,\r\n    }\r\n}));\r\n\r\nexport default function Form(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper elevation={1} variant=\"outlined\">\r\n                <form onSubmit={props.formsubmit} autoComplete=\"off\" className={classes.boxpadding}>\r\n                    <FormControl required fullWidth={true} className={classes.margin}>\r\n                        <RadioGroup required row=\"row\" aria-label=\"position\" name=\"barang\" defaultValue=\"top\" value={props.radiovalue}>\r\n                            <FormControlLabel\r\n                                value=\"nike\"\r\n                                control={<Radio onClick={props.radioklik} color=\"primary\" required />}\r\n                                label=\"Nike\"\r\n                                labelPlacement=\"top\"/>\r\n                            <FormControlLabel\r\n                                value=\"wakai\"\r\n                                control={<Radio onClick={props.radioklik} color=\"primary\" required />}\r\n                                label=\"Wakai\"\r\n                                labelPlacement=\"top\"/>\r\n                            <FormControlLabel\r\n                                value=\"adidas\"\r\n                                control={<Radio onClick={props.radioklik} color=\"primary\" required />}\r\n                                label=\"Adidas\"\r\n                                labelPlacement=\"top\"/>\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                    <FormControl fullWidth={true} className={classes.formcontrolpadding}>\r\n                        <TextField required id=\"filled-number\" label=\"Jumlah\" variant=\"outlined\" type=\"number\" name=\"jumlah\"/>\r\n                    </FormControl>\r\n                    <FormControl className={classes.formcontrolpadding}>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            disabled={props.proses}\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}>\r\n                            Save\r\n                        </Button>\r\n                        {props.proses && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                    </FormControl>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","D:\\irvan\\react\\juliansepatu\\src\\Pages\\BarangReturn\\index.js",["60","61","62","63","64","65","66","67"],"import React from 'react';\r\nimport QrReader from 'react-qr-reader'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default class App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          active: 'Home',\r\n          isLoaded: false,\r\n          items: [],\r\n          rows:[]\r\n        };\r\n    }\r\n    componentDidMount() {\r\n      const apiUrl = 'https://api.github.com/users/hacktivist123/repos';\r\n      fetch(apiUrl)\r\n        .then((response) => response.json())\r\n        .then((data) => console.log('This is your data', data));\r\n    }\r\n    createData(name, calories, fat, carbs, protein) {\r\n        return { name, calories, fat, carbs, protein };\r\n    }\r\n    generateData(){\r\n        this.setState({\r\n            rows:[\r\n                this.createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n                this.createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n                this.createData('Eclair', 262, 16.0, 24, 6.0),\r\n                this.createData('Cupcake', 305, 3.7, 67, 4.3),\r\n                this.createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n            ]\r\n        })\r\n    }\r\n    render() { \r\n      return(\r\n        <div>\r\n          <h2>Barang Keluar</h2>\r\n          <QrReader\r\n            facingMode=\"environment\"\r\n            delay={300}\r\n            onError={this.handleError}\r\n            onScan={this.handleScan}\r\n            style={{ width: '100%' }}\r\n          />\r\n          <p>{this.state.result}</p>\r\n        </div>\r\n      )\r\n    }\r\n}","D:\\irvan\\react\\juliansepatu\\src\\Pages\\BarangKeluar\\Tabel.js",["68","69","70"],"import React from 'react';\r\n// import {makeStyles} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport QRCode from \"react-qr-code\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\n// import DialogTitle from '@material-ui/core/DialogTitle';\r\nimport ReactToPrint from \"react-to-print\";\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import TextField from '@material-ui/core/TextField';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n// import {green} from '@material-ui/core/colors';\r\n\r\nexport default class Tabel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dialogopen: false,\r\n            dialogopendua: false,\r\n            nobarang: '20201210sku10',\r\n            detailbarang: []\r\n        };\r\n        this.handleClickOpen = this.handleClickOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleClickOpenDialogDua = this.handleClickOpenDialogDua.bind(this);\r\n    }\r\n    handleClickOpenDialogDua = (val) => {\r\n        this.setState({dialogopendua: true, nobarang: 'berubah'});\r\n        fetch('http://localhost:3001/api/barangmasuk/20201210sku10').then((response) => response.json()).then((data) => {\r\n            this.setState({rows: data});\r\n        });\r\n    };\r\n    handleClickOpen = (val) => {\r\n        this.setState({nobarang: val});\r\n        this.setState({dialogopen: true});\r\n    };\r\n    handleClose = () => {\r\n        this.setState({dialogopen: false});\r\n        this.setState({dialogopendua: false});\r\n    };\r\n    render() {\r\n        return (\r\n            <Box component=\"span\" m={1}>\r\n                <TableContainer component={Paper}>\r\n                    <Table size=\"small\" aria-label=\"a dense table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Nama Barang</TableCell>\r\n                                <TableCell>Jumlah</TableCell>\r\n                                <TableCell>Tanggal Keluar</TableCell>\r\n                                <TableCell>Kode</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this\r\n                                .props\r\n                                .rows\r\n                                .map((row) => (\r\n                                    <TableRow key={row.BarangKeluarId}>\r\n                                        <TableCell>{row.barang_masuk.NamaBarang}</TableCell>\r\n                                        <TableCell>{row.Jumlah}</TableCell>\r\n                                        <TableCell>{row.created_at}</TableCell>\r\n                                        <TableCell>\r\n                                            <Button\r\n                                                variant=\"outlined\"\r\n                                                color=\"primary\"\r\n                                                onClick={this\r\n                                                .handleClickOpen\r\n                                                .bind(this, row.barang_masuk.NoBarang)}>\r\n                                                Code\r\n                                            </Button>\r\n                                            {/* <Button\r\n                                                variant=\"outlined\"\r\n                                                color=\"primary\"\r\n                                                onClick={this\r\n                                                .handleClickOpenDialogDua\r\n                                                .bind(this, '20201210sku10')}>\r\n                                                Tes\r\n                                            </Button> */}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))\r\n}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <Dialog\r\n                    open={this.props.dialogopendua}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\">\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            <ComponentKontenDialog detailbarang={this.props.detailbarang}/>\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.props.handleClosedialogopendua} color=\"primary\" autoFocus=\"autoFocus\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.state.dialogopen}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\">\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            <QRCode value={this.state.nobarang}/>\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            <ReactToPrint\r\n                                trigger={() => <a href=\"#\">Print</a>}\r\n                                content={() => this.componentRef}/>\r\n                        </Button>\r\n                        <Button onClick={this.handleClose} color=\"primary\" autoFocus=\"autoFocus\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <div style={{\r\n                    display: \"none\"\r\n                }}>\r\n                    <ComponentToPrint\r\n                        ref={(el) => (this.componentRef = el)}\r\n                        nobarang={this.state.nobarang}/>\r\n                </div>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\nclass ComponentKontenDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            proses: false,\r\n            data: 'kosong',\r\n            rows: [],\r\n            dialogopen: false,\r\n            nobarang: 'salah',\r\n            dialogopen: false\r\n        };\r\n        this.handleClose = this\r\n            .handleClose\r\n            .bind(this);\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        console.log('ComponentKontenDialog');\r\n        console.log(this.props.detailbarang);\r\n    }\r\n\r\n    handleClickOpen = (val) => {\r\n        this.setState({nobarang: val});\r\n        this.setState({dialogopen: true});\r\n    };\r\n    handleClose = () => {\r\n        this.setState({dialogopen: false});\r\n    };\r\n\r\n    radioklik = () => {\r\n        // this.setState({dialogopendua: false});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TableContainer component={Paper}>\r\n                    <Table size=\"small\" aria-label=\"a dense table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Nama Barang</TableCell>\r\n                                <TableCell>Stok</TableCell>\r\n                                <TableCell>Tanggal Masuk</TableCell>\r\n                                <TableCell>Kode</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            <TableRow key={1}>\r\n                                <TableCell>{this.props.detailbarang.NamaBarang}</TableCell>\r\n                                <TableCell>{this.props.detailbarang.Jumlah - (this.props.detailbarang.barang_keluar_count != null\r\n                                        ? this.props.detailbarang.barang_keluar_count\r\n                                        : 0) + (this.props.detailbarang.barang_return_count != null\r\n                                        ? this.props.detailbarang.barang_return_count\r\n                                        : 0)}</TableCell>\r\n                                <TableCell>{this.props.detailbarang.created_at}</TableCell>\r\n                                <TableCell>\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        color=\"primary\"\r\n                                        onClick={this\r\n                                        .handleClickOpen\r\n                                        .bind(this, this.props.detailbarang.NoBarang)}>\r\n                                        Code\r\n                                    </Button>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <br/>\r\n                <form autoComplete=\"off\">\r\n                    <FormControl required=\"required\" fullWidth={true}>\r\n                        <RadioGroup\r\n                            required=\"required\"\r\n                            row=\"row\"\r\n                            aria-label=\"position\"\r\n                            name=\"barang\"\r\n                            defaultValue=\"top\">\r\n                            <FormControlLabel\r\n                                value=\"lazada\"\r\n                                control={< Radio onClick = {\r\n                                this.radioklik\r\n                            }\r\n                            color = \"primary\" required />}\r\n                                label=\"Lazada\"\r\n                                labelPlacement=\"top\"/>\r\n                            <FormControlLabel\r\n                                value=\"shopee\"\r\n                                control={< Radio onClick = {\r\n                                this.radioklik\r\n                            }\r\n                            color = \"primary\" required />}\r\n                                label=\"Shopee\"\r\n                                labelPlacement=\"top\"/>\r\n                            <FormControlLabel\r\n                                value=\"tokopedia\"\r\n                                control={< Radio onClick = {\r\n                                this.radioklik\r\n                            }\r\n                            color = \"primary\" required />}\r\n                                label=\"Tokopedia\"\r\n                                labelPlacement=\"top\"/>\r\n                            <FormControlLabel\r\n                                value=\"bukalapak\"\r\n                                control={< Radio onClick = {\r\n                                this.radioklik\r\n                            }\r\n                            color = \"primary\" required />}\r\n                                label=\"Bukalapak\"\r\n                                labelPlacement=\"top\"/>\r\n                            <FormControlLabel\r\n                                value=\"lainnya\"\r\n                                control={< Radio onClick = {\r\n                                this.radioklik\r\n                            }\r\n                            color = \"primary\" required />}\r\n                                label=\"Lainnya\"\r\n                                labelPlacement=\"top\"/>\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                    <br/>\r\n                    <div>.{this.state.data}</div>\r\n                    <FormControl>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            disabled={this.state.proses}\r\n                            startIcon={< SaveIcon />}>\r\n                            Submit\r\n                        </Button>\r\n                        {this.state.proses && <CircularProgress size={24}/>}\r\n                    </FormControl>\r\n                </form>\r\n\r\n                <Dialog\r\n                    open={this.state.dialogopen}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\">\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            <QRCode value={this.state.nobarang}/>\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            <ReactToPrint\r\n                                trigger={() => <a href=\"#\">Print</a>}\r\n                                content={() => this.componentRef}/>\r\n                        </Button>\r\n                        <Button onClick={this.handleClose} color=\"primary\" autoFocus=\"autoFocus\">\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <div style={{display: \"none\"}}>\r\n                    <ComponentToPrint ref={(el) => (this.componentRef = el)} nobarang={this.state.nobarang}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass ComponentToPrint extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ukuran: localStorage.getItem('ukuranqrcode') || 128,\r\n            jumlahqrcode: localStorage.getItem('jumlahqrcode') || 20,\r\n            jumlahx: []\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.listData();\r\n    }\r\n\r\n    listData = () => {\r\n        let arr = []\r\n        for (let i = 1; i <= this.state.jumlahqrcode; i++) {\r\n            arr.push(i)\r\n        }\r\n        this.setState({jumlahx: arr})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    {this\r\n                        .state\r\n                        .jumlahx\r\n                        .map((key, i) => (\r\n                            <span\r\n                                style={{marginTop: 10,padding: 10}}\r\n                                key={i}><QRCode\r\n                                bgColor={'#FFFFFF'}\r\n                                fgColor={'#000000'}\r\n                                size={this.state.ukuran}\r\n                                value={this.props.nobarang}/>\r\n                            </span>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"71","replacedBy":"75"},{"ruleId":"73","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":2,"column":9,"nodeType":"79","messageId":"80","endLine":2,"endColumn":19},{"ruleId":"77","severity":1,"message":"81","line":17,"column":8,"nodeType":"79","messageId":"80","endLine":17,"endColumn":19},{"ruleId":"82","severity":1,"message":"83","line":84,"column":48,"nodeType":"84","endLine":84,"endColumn":60},{"ruleId":"77","severity":1,"message":"85","line":11,"column":8,"nodeType":"79","messageId":"80","endLine":11,"endColumn":16},{"ruleId":"77","severity":1,"message":"78","line":3,"column":10,"nodeType":"79","messageId":"80","endLine":3,"endColumn":20},{"ruleId":"77","severity":1,"message":"86","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":13},{"ruleId":"77","severity":1,"message":"87","line":5,"column":8,"nodeType":"79","messageId":"80","endLine":5,"endColumn":17},{"ruleId":"77","severity":1,"message":"88","line":6,"column":8,"nodeType":"79","messageId":"80","endLine":6,"endColumn":17},{"ruleId":"77","severity":1,"message":"89","line":7,"column":8,"nodeType":"79","messageId":"80","endLine":7,"endColumn":22},{"ruleId":"77","severity":1,"message":"90","line":8,"column":8,"nodeType":"79","messageId":"80","endLine":8,"endColumn":17},{"ruleId":"77","severity":1,"message":"91","line":9,"column":8,"nodeType":"79","messageId":"80","endLine":9,"endColumn":16},{"ruleId":"77","severity":1,"message":"92","line":10,"column":8,"nodeType":"79","messageId":"80","endLine":10,"endColumn":13},{"ruleId":"82","severity":1,"message":"83","line":130,"column":48,"nodeType":"84","endLine":130,"endColumn":60},{"ruleId":"93","severity":1,"message":"94","line":159,"column":13,"nodeType":"95","messageId":"96","endLine":159,"endColumn":23},{"ruleId":"82","severity":1,"message":"83","line":299,"column":48,"nodeType":"84","endLine":299,"endColumn":60},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],["97"],["98"],"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","'DialogTitle' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Backdrop' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'Paper' is defined but never used.","no-dupe-keys","Duplicate key 'dialogopen'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation"]